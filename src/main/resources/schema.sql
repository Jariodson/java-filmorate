DROP TABLE IF EXISTS "like" CASCADE;
DROP TABLE IF EXISTS genre_of_film CASCADE;
DROP TABLE IF EXISTS friendship CASCADE;
DROP TABLE IF EXISTS "user" CASCADE;
DROP TABLE IF EXISTS film CASCADE;

CREATE TABLE IF NOT EXISTS "user" (
  user_id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  email varchar,
  login varchar,
  birthday date,
  name varchar
);

CREATE TABLE IF NOT EXISTS friendship (
  user_id integer,
  friendUser_id integer
);

CREATE TABLE IF NOT EXISTS film(
  film_id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  name varchar,
  description varchar,
  released_date date,
  duration int,
  mpa_id integer
);

CREATE TABLE IF NOT EXISTS "like"(
  film_id integer,
  user_id integer
);

CREATE TABLE IF NOT EXISTS genre_of_film(
  film_id integer,
  genre_id integer
);

CREATE TABLE IF NOT EXISTS genre(
  genre_id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  genre_name varchar(50)
);

CREATE TABLE IF NOT EXISTS mpa (
  mpa_id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  mpa_name varchar(50)
);

ALTER TABLE friendship ADD FOREIGN KEY (user_id) REFERENCES "user" (user_id);

ALTER TABLE friendship ADD FOREIGN KEY (friendUser_id) REFERENCES "user" (user_id);

ALTER TABLE "like" ADD FOREIGN KEY (film_id) REFERENCES film (film_id);

ALTER TABLE "like" ADD FOREIGN KEY (user_id) REFERENCES "user" (user_id);

ALTER TABLE genre_of_film ADD FOREIGN KEY (film_id) REFERENCES film (film_id);

ALTER TABLE genre_of_film ADD FOREIGN KEY (genre_id) REFERENCES genre (genre_id);

ALTER TABLE film ADD FOREIGN KEY (mpa_id) REFERENCES mpa (mpa_id);